@model PasswordRecoveryConfirmModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.PasswordRecovery").Text);
    //page class
    Html.AppendPageCssClassParts("html-password-recovery-page");
}
<div class="page password-recovery-page">
    <div class="page-title">
        <h1>@T("Account.PasswordRecovery")</h1>
    </div>
    <div class="page-body">
        @if (!string.IsNullOrEmpty(Model.Result))
        {
            <div class="result">
                @Model.Result
            </div>
        }
        @if (!Model.DisablePasswordChanging)
        {
            <form asp-route="PasswordRecoveryConfirm" asp-route-token="@Context.Request.Query["token"]" asp-route-email="@Context.Request.Query["email"]" method="post">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="container">
                    <div class="row">
                        <div class="input-field col s12">
                            <label asp-for="NewPassword" asp-postfix=":"></label>
                            <input asp-for="NewPassword" />
                            <nop-required />
                            <span asp-validation-for="NewPassword"></span>
                        </div>
                        <div class="input-field col s12">
                            <label asp-for="ConfirmNewPassword" asp-postfix=":"></label>
                            <input asp-for="ConfirmNewPassword" />
                            <nop-required />
                            <span asp-validation-for="ConfirmNewPassword"></span>
                        </div>
                    </div>
                </div>
                <div class="buttons">
                    <button type="submit" name="set-password" class="btn waves-effect waves-light" value="@T("Account.PasswordRecovery.ChangePasswordButton")">@T("Account.PasswordRecovery.ChangePasswordButton")</button>
                </div>
            </form>
        }
    </div>
</div>
