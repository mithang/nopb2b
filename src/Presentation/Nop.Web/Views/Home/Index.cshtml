@using Nop.Services.Plugins;
@using Nop.Web.Framework.Infrastructure;

@{
    Layout = "_ColumnsOne";


    // check plugin is installed
    //var pluginDescriptor = PluginsInfo.InstalledPluginNames.Contains("Widgets.MyCustomPlugin");


    //page class
    Html.AppendPageCssClassParts("html-home-page");
}
<div class="page home-page">
    <div class="page-body">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageTop })
            @await Component.InvokeAsync("TopicBlock", new { systemName = "HomepageText" })
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
            @await Component.InvokeAsync("HomepageCategories")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })
            @await Component.InvokeAsync("HomepageProducts")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
            @await Component.InvokeAsync("HomepageBestSellers")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
            @await Component.InvokeAsync("HomepageNews")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
            @await Component.InvokeAsync("HomepagePolls")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBottom })

            @*@await Html.PartialAsync("~/Plugins/Nop.Plugin.MediHub.Slider/Views/_SliderShow.cshtml")*@

            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomeMyCustomPlugin })
        


    </div>
</div>
